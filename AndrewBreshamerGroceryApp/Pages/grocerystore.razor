@page "/grocerystore" 
@using System.Collections;
@using System.Collections.Generic;



<AddNewIsle/> 

<h3>GroceryStore</h3>

<br> @* use CSS probably *@

<ul>
    @foreach (var isle in isleList) 
    {
        <li> 
            Isle @isle.isleNumber , Description: @isle.isleName
            <ul>
                @foreach (var item in isle.isleItems) 
                {
                <li>
                    Item: @item.itemName
                    <br> Brand: @item.brand 
                    <br> Price: @String.Format("${0:#,##0.00}", (@item.price)) @* Format currency in data validation also possible... but doesn't work idk :/ *@
                    <br> Quantity: @item.qty
                    <button class="btn btn-primary" @onclick="()=> item.qty++">Increase</button>
                    <button class="btn btn-primary" @onclick="()=> item.qty--">Decrease</button>
                </li>
                }
            </ul>
        </li> 
    }
</ul>

<input placeholder="Add isle" @bind="newIsle" />
<button @onclick="AddIsle">Add Isle</button>


@code {
    private string newIsle;

    public static List<GroceryIsle> isleList = new List<GroceryIsle>() //declare list as static for "public" use by other components... not sure if correct solution, but works
    {
        new GroceryIsle() 
        { 
            isleName = "produce", isleNumber = 0, isleItems = new List<FoodItem>() 
            { 
                new FoodItem()
                { 
                    itemName = "Apple", brand = "Gala", price = 0.5, qty = 0
                },
                new FoodItem()
                { 
                    itemName = "Banana", brand = "Chiquita", price = 0.3, qty = 0
                },
            }
        },
        new GroceryIsle() 
        { 
            isleName = "breakfast", isleNumber = 1, isleItems = new List<FoodItem>() 
            { 
                new FoodItem()
                { 
                    itemName = "Crackers", brand = "Ritz", price = 3, qty = 0
                },
                new FoodItem()
                { 
                    itemName = "Coffee", brand = "folgers", price = 15, qty = 0
                },
            }
        },
        new GroceryIsle() 
        {
            isleName = "beverage", isleNumber = 2, isleItems = new List<FoodItem>() 
            { 
                new FoodItem()
                { 
                    itemName = "Soda", brand = "Coca-Cola", price = 6, qty = 0
                },
                new FoodItem()
                { 
                    itemName = "Fruit-juice", brand = "Minute Maid", price = 4, qty = 0
                },
            }
        }
    }; 

    private void AddIsle() 
    {
        if(!string.IsNullOrWhiteSpace(newIsle)) 
        {
            isleList.Add(new GroceryIsle { isleName = newIsle });
            newIsle = string.Empty;
        }
    }
}